options:
  logging: 'CLOUD_LOGGING_ONLY'
steps:
  # 1) build docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
          - build
          - '-t'
          - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$SHORT_SHA'
          - '-t'
          - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:latest'
          - '.'

  # 2) push image to Container Registry (images: below will be pushed by Cloud Build automatically
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$SHORT_SHA'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:latest'

  # 3) deploy to Cloud Run, attach Cloud SQL instance and set DATABASE_URL using secret for DB password
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: gcloud
    args:
      - run 
      - deploy 
      - "${_SERVICE}"
      - '--image' 
      - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$SHORT_SHA'
      - '--region' 
      - "${_REGION}" 
      - '--platform' 
      - 'managed' 
      - '--allow-unauthenticated' 
      - '--add-cloudsql-instances' 
      - "${_CLOUD_SQL_CONNECTION_NAME}" 
      - '--set-env-vars' 
      - "DATABASE_URL=postgresql+pg8000://${_DB_USER}:${DB_PASS}@/${_DB_NAME}?host=/cloudsql/${_CLOUD_SQL_CONNECTION_NAME}" \
      - '--update-env-vars' 
      - "CLOUD_SQL_CONNECTION_NAME=${_CLOUD_SQL_CONNECTION_NAME},DB_NAME=${_DB_NAME},DB_USER=${_DB_USER}"

# image metadata so Cloud Build pushes the image to the registry
images:
  - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:$SHORT_SHA'
  - 'europe-west1-docker.pkg.dev/$PROJECT_ID/${_REPO}/${_SERVICE}:latest'

# allow injection of secret DB_PASS from Secret Manager into the build as env var DB_PASS
availableSecrets:
  secretManager:
    - versionName: 'projects/${PROJECT_ID}/secrets/DB_PASS/versions/latest'
      env: ['DB_PASS']

# substitutions to set when you trigger the build (or configure defaults in Cloud Build trigger)
substitutions:
  _REPO: 'bachelorjo2024back'
  _SERVICE: 'joback'
  _REGION: 'europe-west1'
  _MAX_INSTANCES: '2' 
  _CLOUD_SQL_CONNECTION_NAME: 'frontendjo2024:europe-west1:google-sql-postgress'  # ex: project:region:instance â€” set in trigger or CI
  _DB_USER: 'postgres'                     # set in trigger or CI
  _DB_NAME: 'jo2024'                     # set in trigger or CI

timeout: '1200s'